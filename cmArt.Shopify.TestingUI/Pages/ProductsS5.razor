@page "/ProductsS5"
@inject HttpClient Http
@using cmArt.Reece.ShopifyConnector
@using cmArt.Portal.Data


<PageTitle>S5 Products</PageTitle>

<h1>Product Data - System Five</h1>
<cmArt.Shopify.TestingUI.Components.ProductsStats data="products"></cmArt.Shopify.TestingUI.Components.ProductsStats>

<div>Part Filter: <input @onchange="OnChangePartNumberFilter" /></div>
<br />

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>InvUnique</th>
                <th>Cat</th>
                <th>Description</th>
                <th>PartNumber</th>
                <th>WebCategory</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.InvUnique.ToString()</td>
                    <td>@product.Cat</td>
                    <td>@product.Description</td>
                    <td>@product.PartNumber</td>
                    <td>@product.WebCategory</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<IShopify_Product> products;
    private string PartFilter;
    private IEnumerable<IShopify_Product> products_orig;

    private void OnChangePartNumberFilter(ChangeEventArgs e)
    {
        if (products_orig == null)
        {
            products_orig = products;
        }
        string value = e.Value.ToString() ?? string.Empty;
        IEnumerable<IShopify_Product> _products = products ?? new List<IShopify_Product>();

        if (value != string.Empty)
        {
            if (_products.Count() > 0)
            {
                products = products_orig.Where(x => x.PartNumber.ToUpper().Contains(value.ToUpper()));
            }
        }
        else
        {
            products = products_orig ?? new List<IShopify_Product>();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        string strDocument = await Http.GetStringAsync("http://localhost:7071/api/JsonDocument/74e5b8d9-f264-4029-af3a-f2c44c906511");
        Document doc = (Document)System.Text.Json.JsonSerializer.Deserialize(strDocument, typeof(Document));
        products = (IEnumerable<IShopify_Product>)System.Text.Json.JsonSerializer.Deserialize(doc.DocumentValue, typeof(IEnumerable<Shopify_Product>));
        //products = await Http.GetFromJsonAsync<Shopify_Product[]>("sample-data/tblPocoProductsAdapted_page1.json");
    }
}
