@page "/QuantitiesShopify"
@inject HttpClient Http
@using cmArt.Reece.ShopifyConnector


<PageTitle>Shopify Quantities</PageTitle>

<h1>Quantity Data - Shopify</h1>

@if (records == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>InvUnique</th>
                <th>Cat</th>
                <th>PartNumber</th>
                @for(short i = 0; i < 5; i++)
                {
                    <th style="text-align:right;">Qty(Dept-@i)</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var record in records)
            {
                <tr>
                    <td>@record.InvUnique.ToString()</td>
                    <td>@record.Cat</td>
                    <td>@record.PartNumber</td>
                    @for(short i = 0; i < 5; i++)
                    {
                        <td style="text-align:right;">
                            @if(record.Quantities.Where(x => x.Location == i).FirstOrDefault() == null)
                            {
                            <div style="float: right;color:red;" align="right" title="Sched-@i missing">@(Decimal.Round((record.Quantities.Where(x => x.Location == i).FirstOrDefault() ?? new S5QtyPair(i,0)).Qty, 2))</div>
                            }
                            else
                            {
                            <div style="float: right;" align="right" title="Sched-i">@(Decimal.Round((record.Quantities.Where(x => x.Location == i).FirstOrDefault() ?? new S5QtyPair(i,0)).Qty, 2))</div>
                            }
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Shopify_Quantities[]? records;

    protected override async Task OnInitializedAsync()
    {
        records = await Http.GetFromJsonAsync<Shopify_Quantities[]>("sample-data/tblShopifyQuantities_ReecesAPI_page1.json");
    }
}
